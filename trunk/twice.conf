# General:
#
#   Specify server port, memory limit, and template tag format.  In order
# to protect a server from memory leaks or overload conditions, Twice will 
# terminate if it uses more than memory_limit MB's of RAM.

port                3333                
memory_limit        100
template_regex      <&(.*?)&>

# Headers:
#
#   Twice uses HTTP headers to communicate with application servers.  The 
# names of each of these headers can be specified below.  
#
# purge_header      - delete cache keys
# twice_header      - tell app server to render for Twice
# cache_header      - tells twice how to cache a response
# cookies_header    - tells twice which cookies affect caching

purge_header        x-mark-dirty
twice_header        x-twice
cache_header        x-twice-control
cookies_header      x-twice-cookies

# Backend Servers:
# 
#   Twice can talk to almost any type of backend server or storage device (with
# the proper plugin of course).  This is the place to specify addresses, ports, 
# and login credentials for these resources.

backend_appserver   127.0.0.1:8080
backend_memcache    127.0.0.1:11211
backend_memcachedb  127.0.0.1:21201
backend_db_host     127.0.0.1:5432
backend_db_name     db_name
backend_db_user     db_user
backend_db_pass     db_pass
backend_db_pool_min 1
backend_db_pool_max 5

# Cache Type:
#
#   For smaller sites, use the internal cache for the lowest possible latency.
# If you are running serveral Twice processes or have a very large number of 
# pages to cache, use the memcache cache.  If the cache type is internal, 
# cache_server and cache_pool are meaningless.

#cache_type          internal
cache_type          memcache
cache_server        127.0.0.1
cache_pool          10

# Internationalization:
#
#   If your appliation renders different versions of the same url based on the 
# preferred language of the browser, you will want to enable hash_langauge.  
# This appends the browser's preferred language string to the uri hash.

hash_lang_header    yes
hash_lang_default   en-us

# Misc:

#   If you need to do something special with virtual hosts, you can use 
# rewrite_host to modify the Host header of requests that Twice proxies
# to the application servers.

#rewrite_host        www.mydomain.com



